/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package MCViews;

import MCControllers.MovieController;
import MCModels.Movie;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author DELL
 */
public class MovieView extends javax.swing.JFrame {

    MovieController movieC = new MovieController();
    
    /**
     * Creates new form MovieView
     */
    public MovieView() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addRBGroup = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        movieTable = new javax.swing.JTable();
        addBtn = new javax.swing.JButton();
        modifyBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        javax.swing.JPanel addPanel = new javax.swing.JPanel();
        movieNameTextField = new javax.swing.JTextField();
        nameText = new javax.swing.JLabel();
        durationText = new javax.swing.JLabel();
        movieDurTextField = new javax.swing.JTextField();
        availableRB = new javax.swing.JRadioButton();
        notAvailableRB = new javax.swing.JRadioButton();
        statusText = new javax.swing.JLabel();
        saveAddBtn = new javax.swing.JButton();
        cancelAddBtn = new javax.swing.JButton();
        refreshBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        movieTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Duration", "Status"
            }
        ));
        movieTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        movieTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        movieTable.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                movieTableComponentShown(evt);
            }
        });
        jScrollPane1.setViewportView(movieTable);

        addBtn.setText("Add");
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        modifyBtn.setText("Modify");
        modifyBtn.setToolTipText("");
        modifyBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifyBtnActionPerformed(evt);
            }
        });

        deleteBtn.setText("Delete");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        nameText.setText("Name");

        durationText.setText("Duration");

        addRBGroup.add(availableRB);
        availableRB.setText("Available");

        addRBGroup.add(notAvailableRB);
        notAvailableRB.setSelected(true);
        notAvailableRB.setText("Not Available");

        statusText.setText("Status");

        saveAddBtn.setText("Save");
        saveAddBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveAddBtnActionPerformed(evt);
            }
        });

        cancelAddBtn.setText("Cancel");

        javax.swing.GroupLayout addPanelLayout = new javax.swing.GroupLayout(addPanel);
        addPanel.setLayout(addPanelLayout);
        addPanelLayout.setHorizontalGroup(
            addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(addPanelLayout.createSequentialGroup()
                        .addComponent(nameText)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(movieNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(addPanelLayout.createSequentialGroup()
                        .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(durationText)
                            .addComponent(statusText))
                        .addGap(32, 32, 32)
                        .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(addPanelLayout.createSequentialGroup()
                                .addComponent(availableRB)
                                .addGap(43, 43, 43)
                                .addComponent(notAvailableRB))
                            .addComponent(movieDurTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(34, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(saveAddBtn)
                .addGap(38, 38, 38)
                .addComponent(cancelAddBtn)
                .addGap(47, 47, 47))
        );
        addPanelLayout.setVerticalGroup(
            addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addPanelLayout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameText)
                    .addComponent(movieNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(movieDurTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(durationText))
                .addGap(18, 18, 18)
                .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(availableRB)
                    .addComponent(notAvailableRB)
                    .addComponent(statusText))
                .addGap(18, 18, 18)
                .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveAddBtn)
                    .addComponent(cancelAddBtn))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        refreshBtn.setText("Refresh");
        refreshBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(addBtn)
                                .addGap(62, 62, 62)
                                .addComponent(modifyBtn)
                                .addGap(71, 71, 71)
                                .addComponent(deleteBtn))
                            .addComponent(addPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(refreshBtn)
                        .addGap(18, 18, 18)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 617, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(refreshBtn)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addBtn)
                    .addComponent(modifyBtn)
                    .addComponent(deleteBtn))
                .addGap(18, 18, 18)
                .addComponent(addPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
    private void modifyBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifyBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_modifyBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        // TODO add your handling code here:
        //addPanel.setVisible(false); 
        
    }//GEN-LAST:event_addBtnActionPerformed

    private void saveAddBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveAddBtnActionPerformed
        // TODO add your handling code here:
        int status;
        if(availableRB.isSelected() == true)
        {
            status=1;
        }
        else
        {
            status=2;
        }
                
        int res = movieC.Add(movieNameTextField.getText(), Integer.parseInt(movieDurTextField.getText()),status);
         if(res>0)
        {
            JOptionPane.showMessageDialog(null, "Saved");
            //new NewJFrame().setVisible(true);
            //this.dispose();
        }
        else
        {
            JOptionPane.showMessageDialog(null,"Unable to save");
        }
        
        refreshBtnActionPerformed(evt);
    }//GEN-LAST:event_saveAddBtnActionPerformed

    private void movieTableComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_movieTableComponentShown
        // TODO add your handling code here:
        //DefaultTableModel model = (DefaultTableModel) movieTable.getModel();
//        Object[] colNames =  {"ID","Name","Duration","Status"};
//        List<Movie> movieList = movieC.SelectAll();
//        Object data[][] = new Object[movieList.size()][colNames.length];
//        Iterator<Movie> itr = movieList.iterator();
//        int i=0;
//        while(itr.hasNext())
//        {
//            Movie iMovie = itr.next();
//            data[i][0]=Integer.toString(iMovie.getId());
//            data[i][1]=iMovie.getName();
//            System.out.println(iMovie.getName());
//            data[i][2]=Integer.toString(iMovie.getDuration());
//            data[i][3]=Integer.toString(iMovie.getStatus());
//            i++;      
//            //model.addRow(data);
//        }
//        
//        //model = DefaultTableModel(colNames,data);
//        DefaultTableModel model = new DefaultTableModel(data,colNames);
//        movieTable.setModel(model);
//        movieTable.getModel();
//           // TODO add your handling code here:
//        DefaultTableModel model = (DefaultTableModel) movieTable.getModel();
//        List <Movie> movieList = movieC.SelectAll();
//        Object rowData[] = new Object[4];
//        
//        for (int i=0; i<movieList.size(); i++){
//            rowData[0] = movieList.get(i).getId();
//            rowData[1] = movieList.get(i).getName();
//            rowData[2] = movieList.get(i).getDuration();
//            //rowData[3] = movieList.get(i).getGenre();
//            model.addRow(rowData);
//        }
//        
//        movieTable.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
//        public void valueChanged(ListSelectionEvent event) {
//            // do some actions here, for example
//            // print first column value from selected row
//            nameTextField.setText(tbMovie.getValueAt(tbMovie.getSelectedRow(), 1).toString());
//            txtDur.setText(tbMovie.getValueAt(tbMovie.getSelectedRow(), 2).toString());
//            txtGenre.setText(tbMovie.getValueAt(tbMovie.getSelectedRow(), 3).toString());
    }//GEN-LAST:event_movieTableComponentShown

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) movieTable.getModel();
        List <Movie> movieList = movieC.SelectAll();
        Object rowData[] = new Object[4];
        
        for (int i=0; i<movieList.size(); i++){
            rowData[0] = movieList.get(i).getId();
            rowData[1] = movieList.get(i).getName();
            rowData[2] = movieList.get(i).getDuration();
            rowData[3] = movieList.get(i).getStatus();
            model.addRow(rowData);
        }
//        

        movieTable.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
        @Override
        public void valueChanged(ListSelectionEvent event) {
            // do some actions here, for example
            // print first column value from selected row
            //System.out.println(movieTable.getValueAt(table.getSelectedRow(), 0).toString());
        
            movieNameTextField.setText(movieTable.getValueAt(movieTable.getSelectedRow(), 1).toString());
            movieDurTextField.setText(movieTable.getValueAt(movieTable.getSelectedRow(), 2).toString());
            //movieStatusText.setText(movieTable.getValueAt(movieTable.getSelectedRow(), 2).toString());

        }    
       });
    }//GEN-LAST:event_formComponentShown

    private void refreshBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshBtnActionPerformed
        // TODO add your handling code here:
        
        DefaultTableModel model = (DefaultTableModel) movieTable.getModel();
        
        if (model.getRowCount() > 0) {   
            for (int i = model.getRowCount() - 1; i > -1; i--) {        
                model.removeRow(i);   
            }
        }
        
        List <Movie> movieList = movieC.SelectAll();
        Object rowData[] = new Object[4];
        
        for (int i=0; i<movieList.size(); i++){
            rowData[0] = movieList.get(i).getId();
            rowData[1] = movieList.get(i).getName();
            rowData[2] = movieList.get(i).getDuration();
            rowData[3] = movieList.get(i).getStatus();
            model.addRow(rowData);
        }
//        

        movieTable.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
        @Override
        public void valueChanged(ListSelectionEvent event) {
            // do some actions here, for example
            // print first column value from selected row
            //System.out.println(movieTable.getValueAt(table.getSelectedRow(), 0).toString());
        
            movieNameTextField.setText(movieTable.getValueAt(movieTable.getSelectedRow(), 1).toString());
            movieDurTextField.setText(movieTable.getValueAt(movieTable.getSelectedRow(), 2).toString());
            //movieStatusText.setText(movieTable.getValueAt(movieTable.getSelectedRow(), 2).toString());

        }    
       });
    }//GEN-LAST:event_refreshBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MovieView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MovieView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MovieView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MovieView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MovieView().setVisible(true);
               
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn;
    private javax.swing.ButtonGroup addRBGroup;
    private javax.swing.JRadioButton availableRB;
    private javax.swing.JButton cancelAddBtn;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JLabel durationText;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton modifyBtn;
    private javax.swing.JTextField movieDurTextField;
    private javax.swing.JTextField movieNameTextField;
    private javax.swing.JTable movieTable;
    private javax.swing.JLabel nameText;
    private javax.swing.JRadioButton notAvailableRB;
    private javax.swing.JButton refreshBtn;
    private javax.swing.JButton saveAddBtn;
    private javax.swing.JLabel statusText;
    // End of variables declaration//GEN-END:variables
}

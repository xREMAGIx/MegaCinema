/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package MCViews;

import MCControllers.CinemaController;
import MCControllers.StorageController;
import MCControllers.UnitController;
import MCControllers.WarehouseController;
import MCModels.ArrayListComboBoxModel;
import MCModels.Cinema;
import MCModels.Storage;
import MCModels.Warehouse;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author USER
 */
public class StorageMCView extends javax.swing.JFrame {

    StorageController sc = new StorageController();
     CinemaController cinemaC = new CinemaController();
      UnitController uc = new UnitController();
    private List<String> warehouseList = new ArrayList<>();
    private List<String> productList = new ArrayList<>();
    private ArrayListComboBoxModel modelCinema;
    private ArrayListComboBoxModel modelProduct;
    
    List<Storage> tempP = null;
    
    /**
     * Creates new form StorageMCView
     */
    public StorageMCView() {
        initComponents();
        loadWarehouse();
        loadProduct();
    }
    
    public void loadWarehouse(){
      WarehouseController warehouseC = new WarehouseController();
      List<Warehouse> temp = null;
      temp = warehouseC.loadWarehouses();
      
     
      
      for (int i=0; i<temp.size();i++)
      {
          warehouseList.add(Integer.toString(temp.get(i).getId()) + " - " + cinemaC.IDtoName(temp.get(i).getCinemaId()));        
      }
      modelCinema = new ArrayListComboBoxModel((ArrayList<String>) warehouseList);
//        modelStatus.setSelectedItem(modelStatus.getElementAt(0));
	cbWarehouse.setModel(modelCinema);
    }
    
    public void loadProduct(){
      
      tempP = sc.loadProducts();
      
      for (int i=0; i<tempP.size();i++)
      {
          productList.add(tempP.get(i).getProductName());        
      }
     
      
      
      modelProduct = new ArrayListComboBoxModel((ArrayList<String>) productList);
//        modelStatus.setSelectedItem(modelStatus.getElementAt(0));
	cbProduct.setModel(modelProduct);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbStorage = new javax.swing.JTable();
        txtId = new javax.swing.JTextField();
        cbWarehouse = new javax.swing.JComboBox();
        cbProduct = new javax.swing.JComboBox();
        txtQuan = new javax.swing.JTextField();
        btAdd = new javax.swing.JButton();
        btRefresh = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        tbStorage.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Warehouse", "Product", "Quantity", "Unit"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbStorage);

        txtId.setEditable(false);
        txtId.setText("ID");

        cbWarehouse.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cbProduct.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        txtQuan.setText("Quantity");

        btAdd.setText("Add");
        btAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAddActionPerformed(evt);
            }
        });

        btRefresh.setText("Refresh");
        btRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRefreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 1, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbWarehouse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtQuan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btAdd)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cbProduct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(91, 91, 91)
                                .addComponent(btRefresh)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cbWarehouse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbProduct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btRefresh))
                .addGap(18, 18, 18)
                .addComponent(txtQuan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btAdd)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tbStorage.getModel();
        List <Storage> storageList = sc.loadStorages();
        Object rowData[] = new Object[5];
        
        for (int i=0; i<storageList.size(); i++){
            rowData[0] = storageList.get(i).getId();
            rowData[1] = Integer.toString(storageList.get(i).getWarehouseId());
            rowData[2] = storageList.get(i).getProductName();
            rowData[3] = storageList.get(i).getQuantity();
            rowData[4] = uc.IDtoName(storageList.get(i).getUnit());
           
            model.addRow(rowData);
        }
        tbStorage.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
        public void valueChanged(ListSelectionEvent event) {
            // do some actions here, for example
            // print first column value from selected row

//            txtId.setText(tbStorage.getValueAt(tbStorage.getSelectedRow(), 0).toString());
            
//            modelCinema = new ArrayListComboBoxModel((ArrayList<String>) cinemaList);
//           
//            modelCinema.setSelectedItem(tbWarehouse.getValueAt(tbWarehouse.getSelectedRow(), 1).toString());
//            
//            cbCinema.setModel(modelCinema);
            
        }
    });
        cbProduct.addActionListener (new ActionListener () {
            @Override
            public void actionPerformed(ActionEvent e) {
                txtId.setText(Integer.toString(cbProduct.getSelectedIndex()+1));
//                throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }
        });
//        txtId.setText(Integer.toString(wc.getNextID()));
    }//GEN-LAST:event_formComponentShown

    private void btAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAddActionPerformed
        // TODO add your handling code here:
        Storage temp = new Storage (Integer.parseInt(txtId.getText()), cbWarehouse.getSelectedIndex() +1, cbProduct.getSelectedItem().toString(), Integer.parseInt(txtQuan.getText()), tempP.get(Integer.parseInt(txtId.getText()) -1).getUnit());
        
        int res = sc.AddQuantity(Integer.parseInt(txtId.getText()), cbWarehouse.getSelectedIndex() +1 , Integer.parseInt(txtQuan.getText()));
         
        if(res>0)
        {
            JOptionPane.showMessageDialog(null, "Saved");
            //new NewJFrame().setVisible(true);
            //this.dispose();
        }
        else
        {
            JOptionPane.showMessageDialog(null,"Unable to save");
        }
        
        btRefreshActionPerformed( evt);
    }//GEN-LAST:event_btAddActionPerformed

    private void btRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRefreshActionPerformed
        // TODO add your handling code here:
         tbStorage.clearSelection();

        DefaultTableModel model = (DefaultTableModel) tbStorage.getModel();
        
        model.setRowCount(0);
        
         List <Storage> storageList = sc.loadStorages();
        Object rowData[] = new Object[5];
        
        for (int i=0; i<storageList.size(); i++){
            rowData[0] = storageList.get(i).getId();
            rowData[1] = Integer.toString(storageList.get(i).getWarehouseId());
            rowData[2] = storageList.get(i).getProductName();
            rowData[3] = storageList.get(i).getQuantity();
            rowData[4] = uc.IDtoName(storageList.get(i).getUnit());
           
            model.addRow(rowData);
        }
    }//GEN-LAST:event_btRefreshActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StorageMCView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StorageMCView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StorageMCView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StorageMCView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StorageMCView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAdd;
    private javax.swing.JButton btRefresh;
    private javax.swing.JComboBox cbProduct;
    private javax.swing.JComboBox cbWarehouse;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbStorage;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtQuan;
    // End of variables declaration//GEN-END:variables
}

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package MCViews;

import MCControllers.SellReportController;
import MCModels.SellReport;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.File;
import java.io.IOException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;

import javax.swing.JOptionPane;

import org.jfree.ui.ApplicationFrame;

import javax.swing.JPanel;
import javax.swing.WindowConstants;
import javax.swing.table.DefaultTableModel;
import jxl.Workbook;
import jxl.write.Label;
import jxl.write.WritableSheet;
import jxl.write.WritableWorkbook;
import jxl.write.WriteException;
import keeptoo.Drag;

import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.general.DatasetUtilities;
import org.jfree.data.general.DefaultPieDataset;
import org.jfree.data.general.PieDataset;
import org.jfree.ui.ApplicationFrame;
import org.jfree.ui.RefineryUtilities;

/**
 *
 * @author USER
 */
class PieChart_AWT extends JFrame {

    public PieChart_AWT(String title, int product, int ticket) {
        super(title);
        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
//      addWindowListener(new WindowAdapter(){
//          @Override
//            public void windowClosing(WindowEvent e) {
//                setDefaultCloseOperation(WindowConstants.HIDE_ON_CLOSE);
//                
//            }
//      } );
        setContentPane(createDemoPanel(product, ticket));
    }

    private static PieDataset createDataset(int product, int ticket) {
        DefaultPieDataset dataset = new DefaultPieDataset();
        dataset.setValue("Product", new Double(product));
        dataset.setValue("Ticket", new Double(ticket));
//      dataset.setValue( "MotoG" , new Double( 40 ) );    
//      dataset.setValue( "Nokia Lumia" , new Double( 10 ) );  
        return dataset;
    }

    private static JFreeChart createChart(PieDataset dataset) {
        JFreeChart chart = ChartFactory.createPieChart(
                "Total Sales", // chart title 
                dataset, // data    
                true, // include legend   
                true,
                false);

        return chart;
    }

    public static JPanel createDemoPanel(int product, int ticket) {
        JFreeChart chart = createChart(createDataset(product, ticket));

        return new ChartPanel(chart);
    }

}

public class ReportMCView extends javax.swing.JFrame {

    SellReportController rc = new SellReportController();
    List<SellReport> temp = new ArrayList<>();

    /**
     * Creates new form ReportMCView
     */
    public ReportMCView() {
        initComponents();
        dtBegin.timePicker.setEnabled(false);
        dtEnd.timePicker.setEnabled(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        kGradientPanel1 = new keeptoo.KGradientPanel();
        dtEnd = new com.github.lgooddatepicker.components.DateTimePicker();
        dtBegin = new com.github.lgooddatepicker.components.DateTimePicker();
        btOK = new javax.swing.JButton();
        txtProduct = new javax.swing.JTextField();
        txtTicket = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbReport = new javax.swing.JTable();
        btExcel = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtTotal = new javax.swing.JTextField();
        reportFLbl = new javax.swing.JLabel();
        exitBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Report");
        setUndecorated(true);

        kGradientPanel1.setkEndColor(new java.awt.Color(241, 169, 160));
        kGradientPanel1.setkStartColor(new java.awt.Color(1, 50, 67));
        kGradientPanel1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                kGradientPanel1MouseDragged(evt);
            }
        });
        kGradientPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                kGradientPanel1MousePressed(evt);
            }
        });

        btOK.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MCImage/okIcon32px.png"))); // NOI18N
        btOK.setText("OK");
        btOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btOKActionPerformed(evt);
            }
        });

        txtProduct.setEditable(false);
        txtProduct.setText("0");
        txtProduct.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtProduct.setForeground(new java.awt.Color(255, 255, 255));
        txtProduct.setOpaque(false);

        txtTicket.setEditable(false);
        txtTicket.setText("0");
        txtTicket.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtTicket.setForeground(new java.awt.Color(255, 255, 255));
        txtTicket.setOpaque(false);

        jLabel1.setText("Product");
        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));

        jLabel2.setText("Ticket");
        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));

        tbReport.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Date", "Product", "Ticket"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbReport);

        btExcel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MCImage/excelIcon32px.png"))); // NOI18N
        btExcel.setText("Export EXCEL");
        btExcel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExcelActionPerformed(evt);
            }
        });

        jLabel3.setText("Total");
        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));

        txtTotal.setEditable(false);
        txtTotal.setText("0");
        txtTotal.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtTotal.setForeground(new java.awt.Color(255, 255, 255));
        txtTotal.setOpaque(false);

        reportFLbl.setFont(new java.awt.Font("Tahoma", 3, 24)); // NOI18N
        reportFLbl.setForeground(new java.awt.Color(255, 255, 255));
        reportFLbl.setText("Sale Report");

        exitBtn.setBackground(new java.awt.Color(240, 52, 52));
        exitBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        exitBtn.setForeground(new java.awt.Color(255, 255, 255));
        exitBtn.setText("Back");
        exitBtn.setBorder(null);
        exitBtn.setMaximumSize(new java.awt.Dimension(30, 15));
        exitBtn.setMinimumSize(new java.awt.Dimension(30, 15));
        exitBtn.setPreferredSize(new java.awt.Dimension(30, 15));
        exitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout kGradientPanel1Layout = new javax.swing.GroupLayout(kGradientPanel1);
        kGradientPanel1.setLayout(kGradientPanel1Layout);
        kGradientPanel1Layout.setHorizontalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(dtEnd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, kGradientPanel1Layout.createSequentialGroup()
                                .addComponent(btOK)
                                .addGap(53, 53, 53)
                                .addComponent(btExcel, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(dtBegin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(reportFLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                                .addComponent(txtProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(txtTicket, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 601, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(exitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55))
        );
        kGradientPanel1Layout.setVerticalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(reportFLbl)
                .addGap(27, 27, 27)
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtProduct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(txtTicket, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(35, 35, 35)
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(53, 53, 53)
                .addComponent(dtBegin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(dtEnd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btOK)
                    .addComponent(btExcel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel1Layout.createSequentialGroup()
                .addComponent(exitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 470, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1000, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 515, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btOKActionPerformed
        // TODO add your handling code here:
        txtProduct.setText(Integer.toString(0));
        txtTicket.setText(Integer.toString(0));

        tbReport.clearSelection();
        DefaultTableModel model = (DefaultTableModel) tbReport.getModel();
        model.setRowCount(0);

        SimpleDateFormat pFormatter = new SimpleDateFormat("yyyy-MM-dd");

        String datebegin = "";
        datebegin += dtBegin.datePicker.getDateStringOrEmptyString() + " ";

        String dateend = "";
        dateend += dtEnd.datePicker.getDateStringOrEmptyString() + " ";

        Object rowData[] = new Object[4];

        try {
            temp = rc.loadAPeriod(pFormatter.parse(datebegin), pFormatter.parse(dateend));
        } catch (ParseException ex) {
            Logger.getLogger(ReportMCView.class.getName()).log(Level.SEVERE, null, ex);
        }
        for (int i = 0; i < temp.size(); i++) {
            txtProduct.setText(Integer.toString(Integer.parseInt(txtProduct.getText()) + temp.get(i).getProductTotal()));
            txtTicket.setText(Integer.toString(Integer.parseInt(txtTicket.getText()) + temp.get(i).getTicketTotal()));

            rowData[0] = temp.get(i).getId();
            rowData[1] = temp.get(i).getReportDay();
            rowData[2] = temp.get(i).getProductTotal();
            rowData[3] = temp.get(i).getTicketTotal();
            model.addRow(rowData);
        }
        txtTotal.setText(Integer.toString(Integer.parseInt(txtProduct.getText()) + Integer.parseInt(txtTicket.getText())));

        PieChart_AWT demo = new PieChart_AWT("Total Sales", Integer.parseInt(txtProduct.getText()), Integer.parseInt(txtTicket.getText()));

        demo.setSize(560, 367);
        demo.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        RefineryUtilities.centerFrameOnScreen(demo);
        demo.setVisible(true);

//        JPanel pieChart = createPiePanel(Integer.parseInt(txtProduct.getText()), Integer.parseInt(txtTicket.getText()));
//        pieChartPnl.add(pieChart, BorderLayout.CENTER);
//        //pieChartPnl.validate();
//        pieChartPnl.setVisible(true);
    }//GEN-LAST:event_btOKActionPerformed

//    private static PieDataset createPieDataset(int product, int ticket) {
//        DefaultPieDataset dataset = new DefaultPieDataset();
//        dataset.setValue("Product", new Double(product));
//        dataset.setValue("Ticket", new Double(ticket));
////      dataset.setValue( "MotoG" , new Double( 40 ) );    
////      dataset.setValue( "Nokia Lumia" , new Double( 10 ) );  
//        return dataset;
//    }
//
//    private static JFreeChart createPieChart(PieDataset dataset) {
//        JFreeChart chart = ChartFactory.createPieChart(
//                "Total Sales", // chart title 
//                dataset, // data    
//                true, // include legend   
//                true,
//                false);
//
//        return chart;
//    }
//
//    private static JPanel createPiePanel(int product, int ticket) {
//        JFreeChart chart = createPieChart(createPieDataset(product, ticket));
//
//        return new ChartPanel(chart);
//    }

    private void btExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExcelActionPerformed
        // TODO add your handling code here:
        try {
            WritableWorkbook workbook;

            Date date = new Date();
            String filename = "Report" + date.getTime() + ".xls";
            File f = new File(filename);
            f.createNewFile();
            workbook = Workbook.createWorkbook(f);
            WritableSheet sheet1 = workbook.createSheet("RP", 0);

            try {
                sheet1.addCell(new Label(0, 0, "REPORT"));

                sheet1.addCell(new Label(0, 1, "Number of bill"));
                sheet1.addCell(new Label(1, 1, temp.size() + ""));
                sheet1.addCell(new Label(0, 2, "Total income"));
                sheet1.addCell(new Label(1, 2, txtTotal.getText() + ""));
                sheet1.addCell(new Label(0, 3, "ID"));
                sheet1.addCell(new Label(1, 3, "Date"));
                sheet1.addCell(new Label(2, 3, "Product Money"));
                sheet1.addCell(new Label(3, 3, "Ticket Money"));

                SimpleDateFormat pFormatter = new SimpleDateFormat("yyyy-MM-dd");

                for (int i = 0; i < temp.size(); i++) {
                    String id = Integer.toString(temp.get(i).getId());
                    String time = pFormatter.format(temp.get(i).getReportDay());
                    String product = Integer.toString(temp.get(i).getProductTotal());
                    String ticket = Integer.toString(temp.get(i).getTicketTotal());

                    int row = i + 4;
                    sheet1.addCell(new Label(0, row, id));
                    sheet1.addCell(new Label(1, row, time));
                    sheet1.addCell(new Label(2, row, product));
                    sheet1.addCell(new Label(3, row, ticket));

                }
                workbook.write();
                workbook.close();
                JOptionPane.showMessageDialog(this, "Đã xuất ra file Excel " + filename);
            } catch (WriteException ex) {
                Logger.getLogger(ReportMCView.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(ReportMCView.class.getName()).log(Level.SEVERE, null, ex);
            }

        } catch (IOException ex) {
            Logger.getLogger(ReportMCView.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btExcelActionPerformed

    private void kGradientPanel1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_kGradientPanel1MouseDragged
        // TODO add your handling code here:
        new Drag(kGradientPanel1).moveWindow(evt);
    }//GEN-LAST:event_kGradientPanel1MouseDragged

    private void kGradientPanel1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_kGradientPanel1MousePressed
        // TODO add your handling code here:
        new Drag(kGradientPanel1).onPress(evt);
    }//GEN-LAST:event_kGradientPanel1MousePressed

    private void exitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitBtnActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_exitBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ReportMCView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ReportMCView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ReportMCView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReportMCView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ReportMCView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btExcel;
    private javax.swing.JButton btOK;
    private com.github.lgooddatepicker.components.DateTimePicker dtBegin;
    private com.github.lgooddatepicker.components.DateTimePicker dtEnd;
    private javax.swing.JButton exitBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private keeptoo.KGradientPanel kGradientPanel1;
    private javax.swing.JLabel reportFLbl;
    private javax.swing.JTable tbReport;
    private javax.swing.JTextField txtProduct;
    private javax.swing.JTextField txtTicket;
    private javax.swing.JTextField txtTotal;
    // End of variables declaration//GEN-END:variables
}
